<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
		<groupId>io.axoniq.axonserver</groupId>
		<artifactId>axonserver-parent</artifactId>
        <version>4.0.4-SNAPSHOT</version>
    </parent>
    <artifactId>axonserver</artifactId>
    <name>AxonServer - Standard edition</name>

    <properties>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
        <exec.plugin.version>1.6.0</exec.plugin.version>
        <allatori-jar.full-path>${allatori.dir}\lib\allatori.jar</allatori-jar.full-path>

        <frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
        <frontend-maven-plugin.nodeVersion>v9.7.1</frontend-maven-plugin.nodeVersion>
        <frontend-maven-plugin.npmVersion>5.6.0</frontend-maven-plugin.npmVersion>
        <dropwizard-metrics.version>4.0.0</dropwizard-metrics.version>

        <gcloud.project.name>axoniq-platform</gcloud.project.name>
        <gcloud.registry>eu.gcr.io</gcloud.registry>
        <docker.certspath>${env.HOMEDRIVE}${env.HOMEPATH}/.docker/machine/certs</docker.certspath>
        <mapdb.version>3.0.7</mapdb.version>
        <jackson.version>2.9.4</jackson.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.axoniq.axonserver</groupId>
            <artifactId>axonserver-connector-api</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>io.axoniq.axonserver</groupId>
            <artifactId>axonserver-grpc</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>io.axoniq.axondb</groupId>
            <artifactId>query-parser</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-json</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>sockjs-client</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>stomp-websocket</artifactId>
            <version>2.3.3</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>3.3.7</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.mapdb</groupId>
            <artifactId>mapdb</artifactId>
            <version>${mapdb.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- json path for adhoc query -->
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.4</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>io.axoniq.axonserver</groupId>
            <artifactId>axonserver-cli</artifactId>
            <version>${project.parent.version}</version>
            <classifier>exec</classifier>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20140107</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>2.3.0.1</version>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.ttf</exclude>
                    <exclude>**/*.ico</exclude>
                    <exclude>**/*.png</exclude>
                    <exclude>**/*.gif</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.ttf</include>
                    <include>**/*.ico</include>
                    <include>**/*.png</include>
                    <include>**/*.gif</include>
                </includes>
            </resource>
        </resources>

        <extensions>
            <!-- resolves ${os.detected.classifier} -->
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.4.0.Final</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.0.2.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <executable>true</executable>
                            <classifier>exec</classifier>
                            <layout>ZIP</layout>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <sources>false</sources>
                    <javadoc>false</javadoc>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>${frontend-maven-plugin.nodeVersion}</nodeVersion>
                            <npmVersion>${frontend-maven-plugin.npmVersion}</npmVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>ant-test</id>
                        <phase>compile</phase>
                        <configuration>
                            <target>
                                <echo message="${project.build.outputDirectory}/db/migration" />
                                <fixcrlf srcdir="${project.build.outputDirectory}/db/migration" eol="dos" fixlast="false" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Need to add JaCoCo if we want coverage info to show up in SonarQube -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.1</version>

                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.26.0</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>axonserver</alias>
                                    <name>${gcloud.registry}/${gcloud.project.name}/axonserver:${project.version}</name>

                                    <build>
                                        <from>openjdk:8-jdk-alpine</from>
                                        <dockerFileDir>${basedir}/src/main/docker</dockerFileDir>
                                        <assembly>
                                            <inline>
                                                <files>
                                                    <file>
                                                        <source>${project.build.directory}/${project.artifactId}-${project.version}-exec.jar</source>
                                                    </file>
                                                </files>
                                                <dependencySets>
                                                    <dependencySet>
                                                        <includes>
                                                            <include>io.axoniq.axonserver:axonserver-cli:jar:exec</include>
                                                        </includes>
                                                        <outputDirectory>.</outputDirectory>
                                                        <outputFileNameMapping>axoniq-cli.jar</outputFileNameMapping>
                                                    </dependencySet>
                                                </dependencySets>
                                            </inline>
                                        </assembly>
                                        <args>
                                            <JAR_FILE>maven/${project.build.finalName}-exec.jar</JAR_FILE>
                                        </args>
                                    </build>

                                    <run>
                                        <namingStrategy>alias</namingStrategy>
                                        <network>
                                            <name>axoniq</name>
                                            <alias>axonserver</alias>
                                        </network>
                                        <hostname>axonserver.axoniq</hostname>
                                        <ports>
                                            <port>8024:8024</port>
                                            <port>8124:8124</port>
                                            <port>8224:8224</port>
                                        </ports>
                                        <wait>
                                            <log>Tomcat started</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                            <certPath>${docker.certspath}</certPath>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                    <!-- goal>push</goal -->
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>