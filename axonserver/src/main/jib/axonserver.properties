# Copyright (c) 2018 by Axoniq B.V. - All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# HTTP server port
# Axon Server settings
#   The values shown below are the defaults.
# The HTTP port for GUI and REST API
# server.port=8024
# Storage locations
axoniq.axonserver.event.storage=/eventdata
axoniq.axonserver.snapshot.storage=/eventdata
axoniq.axonserver.controldb-path=/data
axoniq.axonserver.pid-file-location=/data
logging.file=/data/axonserver.log
logging.file.max-history=10
logging.file.max-size=10MB
# gRPC port for axonserver platform
# axoniq.axonserver.port=8124
# Node name of this axonserver platform node, if not set defaults to the hostname.
# axoniq.axonserver.name=
# Hostname of this node as communicated to clients, defaults to the result of hostname command
# axoniq.axonserver.hostname=
# Domain of this node as communicated to clients. Optional, if set will be appended to the hostname in communication with clients.
# axoniq.axonserver.domain=
# Cluster enabled
# axoniq.axonserver.cluster.enabled=false
# gRPC port for communication between messing platform nodes
# axoniq.axonserver.internal-port=8224
# Hostname as communicated to other nodes of the cluster. Defaults to hostname.
# axoniq.axonserver.internal-hostname=
# Domain as communicated to other nodes of the cluster. Optional, if not set, it will use the domain value.
# axoniq.axonserver.internal-domain=
# Delay before the first run of the connection checker (in ms.)
# axoniq.axonserver.cluster.connection-check-delay=1000
# Interval between each run of the connection checker (in ms.)
# axoniq.axonserver.cluster.connection-check-interval=1000
# Delay before the first run of the rebalancer (in seconds) [Enterprise edition only]
# axoniq.axonserver.cluster.rebalance-delay=7
# Interval between each run of the rebalancer (in seconds) [Enterprise edition only]
# axoniq.axonserver.cluster.rebalance-interval=15
# SSL enabled for gRPC servers
# axoniq.axonserver.ssl.enabled=false
# axoniq.axonserver.ssl.cert-chain-file=
# axoniq.axonserver.ssl.internal-cert-chain-file=
# axoniq.axonserver.ssl.private-key-file=
# Access control active
# axoniq.axonserver.accesscontrol.enabled=false
# Milliseconds that authenticated tokens will be cached
# axoniq.axonserver.accesscontrol.cache-ttl=30000
# Token to add to AxonHub internal cluster message
# axoniq.axonserver.accesscontrol.internal-token=
# Token expected from client requests [Developer edition only]
# axoniq.axonserver.accesscontrol.token=
# Initial number of permits granted in communication between AxonHub nodes.
# axoniq.axonserver.command-flow-control.initial-permits=10000
# Additional number of permits granted in communication between AxonHub nodes.
# axoniq.axonserver.command-flow-control.new-permits=10000
# Threshold at which the node will send another grant of newPermits to the connected platform node.
# axoniq.axonserver.command-flow-control.threshold=1000
# Initial number of permits granted in communication between AxonHub nodes.
# axoniq.axonserver.query-flow-control.initial-permits=10000
# Additional number of permits granted in communication between AxonHub nodes.
# axoniq.axonserver.query-flow-control.new-permits=10000
# Threshold at which the node will send another grant of newPermits to the connected platform node.
# axoniq.axonserver.query-flow-control.threshold=1000
